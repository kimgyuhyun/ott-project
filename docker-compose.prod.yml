# 프로덕션용 오버라이드 - docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  app: # Spring Boot 애플리케이션 서비스
    image: para98/ott-backend:latest  # 이미지 사용
    env_file:
      - .env  # 서버의 .env 파일 사용
    environment:
      # 프로덕션 프로파일 설정
      SPRING_PROFILES_ACTIVE: prod
      # 프로덕션 데이터베이스 연결 정보 (실제 환경에 맞게 수정 필요)
      SPRING_DATASOURCE_URL: jdbc:postgresql://ott-postgres:5432/ott_project_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}  # 환경변수 사용 권장
      # JPA 설정 (프로덕션용)
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      # Redis 설정
      SPRING_DATA_REDIS_HOST: ott-redis
      SPRING_DATA_REDIS_PORT: 6379
      
      # 소셜 로그인 설정
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      
      # 도메인 설정
      BASE_URL: ${BASE_URL}
      COOKIE_DOMAIN: ${COOKIE_DOMAIN}
      COOKIE_SECURE: ${COOKIE_SECURE}
      COOKIE_SAME_SITE: ${COOKIE_SAME_SITE}
      
      # 메일 설정
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM: ${MAIL_FROM}
      
      # 아임포트 결제 설정
      IAMPORT_MERCHANT_CODE: ${IAMPORT_MERCHANT_CODE}
      IAMPORT_API_KEY: ${IAMPORT_API_KEY}
      IAMPORT_API_SECRET: ${IAMPORT_API_SECRET}
      IAMPORT_WEBHOOK_URL: ${IAMPORT_WEBHOOK_URL}
      IAMPORT_KAKAO_CHANNEL_KEY: ${IAMPORT_KAKAO_CHANNEL_KEY}
      IAMPORT_TOSS_CHANNEL_KEY: ${IAMPORT_TOSS_CHANNEL_KEY}
      IAMPORT_NICE_CHANNEL_KEY: ${IAMPORT_NICE_CHANNEL_KEY}
      
      # 결제 설정
      PAYMENT_TEST_AMOUNT: ${PAYMENT_TEST_AMOUNT}
      PAYMENT_DEV_MODE: ${PAYMENT_DEV_MODE}
      
      # TMDB API
      TMDB_API_KEY: ${TMDB_API_KEY}
      
      # Redis 네임스페이스
      REDIS_NAMESPACE: ${REDIS_NAMESPACE}
      RECENT_SEARCH_TTL_DAYS: ${RECENT_SEARCH_TTL_DAYS}

  frontend: # Next.js 프론트엔드 서비스
    image: para98/ott-frontend:latest  # 이미지 사용
    environment:
      # 프로덕션 백엔드 URL
      NEXT_PUBLIC_BACKEND_ORIGIN: http://ott-app:8090
      NODE_ENV: production
    # 프로덕션에서는 볼륨 마운트 제거 (정적 파일로 실행)
    # volumes: 제거됨

  postgres: # PostgreSQL 데이터베이스 서비스
    environment:
      # 프로덕션 데이터베이스 설정
      POSTGRES_DB: ott_project_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${DB_PASSWORD}  # 환경변수 사용 권장

  nginx: # Nginx 리버스 프록시
    # 프로덕션용 nginx 설정 (필요시 별도 설정 파일 사용)
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt:ro
      - certbot-webroot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"

volumes:
  certbot-etc:
    external: true
    name: certbot-etc
  certbot-webroot:
    external: true
    name: certbot-webroot