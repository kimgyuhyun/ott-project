<?xml version="1.0" encoding="UTF-8"?> <!-- XML 헤더 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!-- DTD -->

<!--
  Mapper: FavoriteQueryMapper
  - 사용자별 찜 목록/개수 조회
  - 정렬: favoritedAt|title|popular 지원
-->
<mapper namespace="com.ottproject.ottbackend.mybatis.FavoriteQueryMapper"> <!-- 네임스페이스 -->

    <!--
      유저별 찜 목록 조회
      - SELECT: 카드에 필요한 컬럼 + 찜 시각(f.created_at)
      - FROM ani_favorites f JOIN ani_list a
      - WHERE f.user_id = #{userId}
      - ORDER BY: 정렬키(title/popular) 보조 + 기본: 최신 찜순
      - LIMIT/OFFSET: 페이지네이션
    -->
    <!-- 파라미터: {userId, sort, limit, offset} -->
    <select id="findFavoriteAnimesByUser" resultType="com.ottproject.ottbackend.dto.FavoriteAniDto"> <!-- 유저별 찜 목록 -->
        SELECT
        a.id AS aniId, <!-- DTO.aniId -->
        a.title AS title, <!-- DTO.title -->
        a.poster_url AS posterUrl, <!-- DTO.posterUrl -->
        a.rating AS rating, <!-- DTO.rating -->
        a.rating_count AS ratingCount, <!-- DTO.ratingCount -->
        a.is_dub AS isDub, <!-- DTO.isDub -->
        a.is_subtitle AS isSubtitle, <!-- DTO.isSubtitle -->
        a.is_exclusive AS isExclusive, <!-- DTO.isExclusive -->
        a.is_new AS isNew, <!-- DTO.isNew -->
        a.is_popular AS isPopular, <!-- DTO.isPopular -->
        a.is_completed AS isCompleted, <!-- DTO.isCompleted -->
        a.status AS animeStatus, <!-- DTO.animeStatus -->
        a.year AS year, <!-- DTO.year -->
        a.type AS type, <!-- DTO.type -->
        f.created_at AS favoritedAt <!-- DTO.favoritedAt -->
        FROM ani_favorites f <!-- 찜 테이블 -->
        JOIN ani_list a ON a.id = f.ani_list_id <!-- 작품 조인 -->
        WHERE f.user_id = #{userId} <!-- 사용자 기준 -->
        ORDER BY
        CASE WHEN #{sort} = 'title' THEN a.title END ASC, <!-- sort=title 이면 제목 오름차순, 아니면 NULL(정렬 영향 없음) -->
        CASE WHEN #{sort} = 'popular' THEN a.is_popular END DESC, <!-- sort=popular 이면 인기 플래그 우선 -->
        f.created_at DESC, a.id DESC <!-- 기본: 찜한 시각 최신 → 동일하면 최신 등록순 -->
        LIMIT #{limit} OFFSET #{offset} <!-- 페이지네이션 -->
    </select> <!-- select 끝 -->

    <!-- 총 개수: 동일 WHERE로 COUNT(1) -->
    <select id="countFavoriteAnimesByUser" resultType="long"> <!-- 총 개수 -->
        SELECT COUNT(1) <!-- 행 수 -->
        FROM ani_favorites f <!-- 찜 테이블 -->
        WHERE f.user_id = #{userId} <!-- 사용자 기준 -->
    </select> <!-- select 끝 -->

<!-- end of FavoriteQueryMapper -->
</mapper> <!-- 매퍼 끝 -->