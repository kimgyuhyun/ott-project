version: '3.8'                    # Docker Compose 버전
services:                         # 서비스 정의 시작
  postgres:                       # PostgreSQL 데이터베이스 서비스
    image: postgres:15            # PostgreSQL 15 버전 이미지
    container_name: ott-postgres  # 컨테이너 이름
    environment:                  # 환경 변수 설정
      POSTGRES_DB: ott_project_db     # 데이터베이스 이름
      POSTGRES_USER: root             # 데이터베이스 사용자명
      POSTGRES_PASSWORD: 1234         # 데이터베이스 비밀번호
    ports:                        # 포트 매핑
      - "5432:5432"               # 호스트:컨테이너 포트
    volumes:                      # 데이터 영속성 볼륨
      - postgres_data:/var/lib/postgresql/data  # PostgreSQL 데이터 저장 경로

  redis: # Redis 캐시 서비스
    image: redis:7-alpine
    container_name: ott-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  app: # Spring Boot 애플리케이션 서비스
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ott-app # 컨테이너 이름
    ports: # 포트 매핑
      - "8090:8090" # 호스트:컨테이너 포트 (외부:내부)
    depends_on: # 의존성 설정
      - postgres # postgres 서비스가 먼저 시작되어야 함
      - redis
    environment: # 환경 변수 설정
      # Spring 프로파일 설정 (여기에 추가)
      SPRING_PROFILES_ACTIVE: dev
      # 데이터베이스 연결 정보
      SPRING_DATASOURCE_URL: jdbc:postgresql://ott-postgres:5432/ott_project_db # 컨테이너 내부 네트워크로 db 연결
      SPRING_DATASOURCE_USERNAME: root # 데이터베이스 사용자명
      SPRING_DATASOURCE_PASSWORD: 1234 # 데이터베이스 비밀번호
      # Flyway 설정
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: true
      # JPA 설정
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      # Redis 설정
      SPRING_DATA_REDIS_HOST: ott-redis
      SPRING_DATA_REDIS_PORT: 6379

  frontend: # Next.js 프론트엔드 서비스
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_ORIGIN=http://ott-app:8090
    container_name: ott-frontend
    environment:
      NEXT_PUBLIC_BACKEND_ORIGIN: http://ott-app:8090
    ports:
      - "3000:3000"
    depends_on:
      - app

  nginx: # Nginx 리버스 프록시
    image: nginx:alpine
    container_name: ott-nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:                         # 볼륨 정의
  postgres_data:                 # PostgreSQL 데이터 저장용 볼륨